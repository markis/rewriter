[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "rewriter"
version = "0.1.0"
authors = [
    {name = "Markis Taylor", email = "m@rkis.net"},
]
description = "Rewrite python code"
readme = "README.md"
requires-python = ">=3.10"
classifiers = []
dependencies = []

[tool.coverage.run]
branch = true
source = [
  "rewriter",
]
omit = [
  "rewriter/__main__.py"
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-q"
testpaths = [
  "tests",
]

[tool.black]
target-version = ["py310"]
line-length = 100

[tool.mypy]
packages = ["rewriter", "tests"]
strict = true
mypy_path = "typings"

[tool.setuptools]
py-modules = ["rewriter"]

[tool.ruff]
target-version = "py310"
line-length = 100
select = [ "E", "F", "W", "Q", "UP", "I", "N" ]

[tool.hatch]

[tool.hatch.build.targets.wheel.hooks.mypyc]
dependencies = ["hatch-mypyc"]
mypy-args = ["--ignore-missing-imports"]

[tool.cibuildwheel]

build-frontend = "build"

# Don't build 32-bit wheels or PyPy
skip = [
  "*-manylinux_i686",
  "*-musllinux_i686",
  "*-win32",
  "pp*",
]

# Apple Silicon support
# When cross-compiling on Intel, it is not possible to test arm64.
# Warnings will be silenced with the following CIBW_TEST_SKIP.
macos.archs = ["x86_64", "arm64"]
test-skip = ["*"] #"*-macosx_arm64"

build-verbosity = 1

linux.before-all = [
  "yum install -y llvm-toolset-7.0 || yum -v install -y llvm-toolset-7.0",
]

# before-test = [
#   "pip install pytest",
# ]
# 
# # pytest looks for configuration files in the parent directories of where the tests live.
# # since we are trying to run the tests from their installed location, we copy those into
# # the venv. Ew ew ew.
# # We don't run external mypyc tests since there's some issue with compilation on the
# # manylinux image we use.
# test-command = "python -m rewriter --help"
# # test-command = """ \
# #   ( \
# #      DIR=$(python -c 'import mypy, os; dn = os.path.dirname; print(dn(dn(mypy.__path__[0])))') \
# #      && cp '{project}/mypy/pytest.ini' '{project}/mypy/conftest.py' $DIR \
# # \
# #      && MYPY_TEST_DIR=$(python -c 'import mypy.test; print(mypy.test.__path__[0])') \
# #      && MYPY_TEST_PREFIX='{project}/mypy' pytest $MYPY_TEST_DIR \
# # \
# #      && MYPYC_TEST_DIR=$(python -c 'import mypyc.test; print(mypyc.test.__path__[0])') \
# #      && MYPY_TEST_PREFIX='{project}/mypy' pytest $MYPYC_TEST_DIR -k 'not test_external' \
# #    )
# # """

[tool.cibuildwheel.config-settings]
--build-option = "--use-mypyc"

[tool.cibuildwheel.environment]
MYPYC_OPT_LEVEL = "3"
MYPYC_DEBUG_LEVEL = "0"

[tool.cibuildwheel.linux.environment]
# Add llvm paths to environment to eliminate scl usage (like manylinux image does for gcc toolset).
MYPYC_OPT_LEVEL = "3"
MYPYC_DEBUG_LEVEL = "0"
PATH="$PATH:/opt/rh/llvm-toolset-7.0/root/usr/bin"
LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/opt/rh/llvm-toolset-7.0/root/usr/lib64"
CC="clang"

[[tool.cibuildwheel.overrides]]
select = "*musllinux*"
before-all = [
  "apk add --no-cache clang",
]
environment = { MYPYC_OPT_LEVEL="3", MYPYC_DEBUG_LEVEL="0", CC="clang" }
